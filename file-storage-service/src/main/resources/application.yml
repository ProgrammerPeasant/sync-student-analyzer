server:
  port: 8081
  forward-headers-strategy: framework

spring:
  application:
    name: file-storage-service
  datasource:
    url: jdbc:postgresql://localhost:5432/textscan_files
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  flyway:
    baseline-on-migrate: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

#springdoc:
#  api-docs:
#    path: /v3/api-docs/file-storage-service
#  swagger-ui:
#    path: /swagger-ui.html
#
springdoc:
  api-docs:
    enabled: true
    # path: /v3/api-docs
  swagger-ui:
    enabled: true # Убедимся, что включено
    # path: /swagger-ui.html # Это путь по умолчанию, можно не указывать или указать явно
    # url: /v3/api-docs      # Swagger UI будет искать спецификацию по этому пути (относительно корня UI)

logging:
  level:
    root: INFO # Общий уровень INFO
    # org.springframework.web: DEBUG # Очень важно для отслеживания запросов в MVC
    org.springframework.boot.autoconfigure.web.servlet. standaardErrorHandler: DEBUG # Чтобы видеть, как обрабатываются ошибки
    # org.springdoc: DEBUG # Логи от SpringDoc
    # Если используешь Tomcat как встроенный сервер (по умолчанию для Spring MVC):
    # org.apache.coyote.http11: DEBUG # Низкоуровневые логи HTTP
    org.apache.catalina: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.hibernate.orm.jdbc.bind: TRACE